{
  "unpublishedCollection": {
    "name": "Data",
    "pageId": "Home",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tCurrentUserId: () => { return 1 },\n\tUpdateAll: async () => {\n\t\tawait GetAllUsers.run();\n\t\tawait GetAllAverages.run();\n\t},\n\tGetUsersAverages: () => {\n\t\tlet users = GetAllUsers.data;\n\t\tlet averages = GetAllAverages.data;\n\t\treturn users.map(u => {\n\t\t\tu.Averages = averages.filter(a => a.UserId === u.Id);\n\t\t\treturn u;\n\t\t});\n\t},\n\tGetUser: (id) => { return Data.GetUsersAverages().find(u => u.Id === id) },\n\tGetCurrentUser: () => { return Data.GetUser(Data.CurrentUserId()); },\n\tGetUserSpendingByMonth: (month) => {\n\t\treturn Data.GetUsersAverages().find(u => u.Id === Data.CurrentUserId()).Averages.find(x => x.Month == month).Sum.toLocaleString(\"en-US\");\n\t},\n\tGetUsersOfCountry: (country) => {\n\t\treturn Data.GetUsersAverages().filter(u => u.Country === country)\n\t\t\t.sort((a, b) => { a.Sum > b.Sum });\n\t},\n\tGetCountries: () => {\n\t\treturn GetAllUsers.data.map(u => u.Country).filter((v, i, s) => s.indexOf(v) == i);\n\t}\n}",
    "variables": []
  },
  "id": "Home_Data",
  "deleted": false,
  "gitSyncId": "6353c0894b1a8d4291236e5b_6353c38331cf9c0f4917e75c"
}